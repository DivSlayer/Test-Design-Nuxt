@use "./variables" as *;


.site-header {
  background: #fff;
  box-shadow: 0 2px 6px rgba(10, 10, 10, 0.04);
  position: sticky;
  top: 0;
  z-index: 40;


  .inner {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 1rem;
    padding: 14px 5%;

    &.container {
      max-width: unset !important;
    }

    .brand {
      img {
        height: 30px;
      }
    }
  }

  .navlinks {
    display: flex;
    gap: 28px;
    align-items: center;

    a {
      color: $light-text;
      position: relative;
      display: flex;
      align-items: center;
      flex-direction: column;
      text-decoration: none;
      font-weight: 600;

      &::after {
        content: '';
        position: absolute;
        background-color: $primary;
        border-radius: 10px;
        height: 2px;
        bottom: -5px;
        width: 0;
        transition: all 0.3s ease;
      }

      &:hover {
        color: $primary;

        &::after {
          width: 100%;
        }
      }

    }
  }


  .header-btn {
    border: 2px solid $primary;
    color: #fff;
    padding: 8px 14px;
    border-radius: 20px;
    background: $primary;
    cursor: pointer;

    &:hover {
      background: transparent;
      color: $primary;
    }
  }

  .menu-trigger {
    display: none;
    // --- variables ---
    $bar-width: 40px;
    $bar-height: 4px;
    $hamburger-gap: 5px;
    $foreground: $light-text;
    $background: $primary;
    $hamburger-margin: 0px;
    $animation-timing: 200ms ease-in-out;
    $hamburger-height: $bar-height * 3 + $hamburger-gap * 2;
    $x-width: $hamburger-height * 1.41421356237;

    // --- hamburger menu styles ---
    .hamburger-menu {
      display: flex;
      flex-direction: column;
      gap: $hamburger-gap;
      width: max-content;
      position: absolute;
      z-index: 2;
      cursor: pointer;
      top: 50%;
      left: 5%;
      transform: translateY(-50%);
    }

    /* default visual for the three bars (two pseudo + one real input bar) */
    .hamburger-menu::before,
    .hamburger-menu::after,
    .hamburger-menu input {
      content: "";
      width: $bar-width;
      height: $bar-height;
      background-color: $foreground;
      border-radius: 9999px;
      transform-origin: left center;
      transition: opacity $animation-timing,
      width $animation-timing,
      rotate $animation-timing,
      translate $animation-timing,
      background-color $animation-timing;
    }

    /* accessibility focus -- unfocused (normal) uses the base colors */
    .hamburger-menu:has(input:focus-visible)::before,
    .hamburger-menu:has(input:focus-visible)::after,
    .hamburger-menu input:focus-visible {
      border: 1px solid $background;
      box-shadow: 0 0 0 1px $foreground;
    }

    /* if the input is both checked and focus-visible, invert the focus visuals
       (mirrors the original behavior where the checked state flips foreground/background) */
    .hamburger-menu:has(input:checked:focus-visible)::before,
    .hamburger-menu:has(input:checked:focus-visible)::after,
    .hamburger-menu:has(input:checked) input:focus-visible {
      border: 1px solid $foreground;
      box-shadow: 0 0 0 1px $background;
    }

    /* when checked: swap the bar colors to the background color (so bars become 'white' over dark bg) */
    .hamburger-menu:has(input:checked)::before,
    .hamburger-menu:has(input:checked)::after,
    .hamburger-menu:has(input:checked) input {
      background-color: $background;
    }

    /* transform the top pseudo -> X (45deg) */
    .hamburger-menu:has(input:checked)::before {
      rotate: 45deg;
      width: $x-width;
      translate: 0 calc($bar-height / -2);
    }

    /* transform the bottom pseudo -> X (-45deg) */
    .hamburger-menu:has(input:checked)::after {
      rotate: -45deg;
      width: $x-width;
      translate: 0 calc($bar-height / 2);
    }

    /* the actual input (middle bar) appearance and behavior */
    .hamburger-menu input {
      appearance: none;
      padding: 0;
      margin: 0;
      outline: none;
      pointer-events: none;
    }

    /* hide the middle bar when checked */
    .hamburger-menu input:checked {
      opacity: 0;
      width: 0;
    }


  }

  .mobile-menu {
    position: absolute;
    top: 60px;
    background-color: #fff;
    width: 100%;
    z-index: 999;
    right: 0;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    row-gap: 30px;
    height: 0;
    overflow: hidden;
    overflow-y: auto;
    display: none;

    &.active {
      height: 200px;
      overflow-y: auto;

      padding: 40px 0;
      .actions {
        display: unset;
      }
      a{
        display: block;
      }
    }

    a {
      color: $light-text;
      position: relative;
      align-items: center;
      flex-direction: column;
      text-decoration: none;
      font-weight: 600;
      display: none;
    }
  }
}


@media screen and (max-width: 600px) {
  .site-header {
    .navlinks {
      display: none;
    }

    .actions {
      display: none;
    }

    .mobile-menu {
      display: flex;
    }

    .menu-trigger {
      display: unset;
    }
  }
}